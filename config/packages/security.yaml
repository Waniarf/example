security:
    password_hashers:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER ]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            stateless: true
            entry_point: jwt
            user_checker: App\Security\UserChecker
            json_login:
                check_path: /api/token/get
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            provider: app_user_provider
            refresh_jwt:
                check_path: /api/token/refresh

    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/categories, roles: PUBLIC_ACCESS }
        - { path: ^/api/token/get, roles: PUBLIC_ACCESS }
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: ROLE_USER }

when@test:
    security:
        # Override to increase performance
        password_hashers:
            App\Entity\User\User:
                algorithm: md5
                encode_as_base64: false
                iterations: 0
